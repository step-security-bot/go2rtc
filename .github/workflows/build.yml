name: Build and Push

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'

jobs:
  build-binaries:
    name: Build binaries
    runs-on: ubuntu-latest
    env: { CGO_ENABLED: 0 }
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with: { go-version: '1.22' }

      - name: Build go2rtc_win64
        env: { GOOS: windows, GOARCH: amd64 }
        run: go build -ldflags "-s -w" -trimpath
      - name: Upload go2rtc_win64
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with: { name: go2rtc_win64, path: go2rtc.exe }

      - name: Build go2rtc_win32
        env: { GOOS: windows, GOARCH: 386, GOTOOLCHAIN: go1.20.14 }
        run: go build -ldflags "-s -w" -trimpath
      - name: Upload go2rtc_win32
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with: { name: go2rtc_win32, path: go2rtc.exe }

      - name: Build go2rtc_win_arm64
        env: { GOOS: windows, GOARCH: arm64 }
        run: go build -ldflags "-s -w" -trimpath
      - name: Upload go2rtc_win_arm64
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with: { name: go2rtc_win_arm64, path: go2rtc.exe }

      - name: Build go2rtc_linux_amd64
        env: { GOOS: linux, GOARCH: amd64 }
        run: go build -ldflags "-s -w" -trimpath
      - name: Upload go2rtc_linux_amd64
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with: { name: go2rtc_linux_amd64, path: go2rtc }

      - name: Build go2rtc_linux_i386
        env: { GOOS: linux, GOARCH: 386 }
        run: go build -ldflags "-s -w" -trimpath
      - name: Upload go2rtc_linux_i386
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with: { name: go2rtc_linux_i386, path: go2rtc }

      - name: Build go2rtc_linux_arm64
        env: { GOOS: linux, GOARCH: arm64 }
        run: go build -ldflags "-s -w" -trimpath
      - name: Upload go2rtc_linux_arm64
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with: { name: go2rtc_linux_arm64, path: go2rtc }

      - name: Build go2rtc_linux_arm
        env: { GOOS: linux, GOARCH: arm, GOARM: 7 }
        run: go build -ldflags "-s -w" -trimpath
      - name: Upload go2rtc_linux_arm
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with: { name: go2rtc_linux_arm, path: go2rtc }

      - name: Build go2rtc_linux_armv6
        env: { GOOS: linux, GOARCH: arm, GOARM: 6 }
        run: go build -ldflags "-s -w" -trimpath
      - name: Upload go2rtc_linux_armv6
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with: { name: go2rtc_linux_armv6, path: go2rtc }

      - name: Build go2rtc_linux_mipsel
        env: { GOOS: linux, GOARCH: mipsle }
        run: go build -ldflags "-s -w" -trimpath
      - name: Upload go2rtc_linux_mipsel
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with: { name: go2rtc_linux_mipsel, path: go2rtc }

      - name: Build go2rtc_mac_amd64
        env: { GOOS: darwin, GOARCH: amd64, GOTOOLCHAIN: go1.20.14 }
        run: go build -ldflags "-s -w" -trimpath
      - name: Upload go2rtc_mac_amd64
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with: { name: go2rtc_mac_amd64, path: go2rtc }

      - name: Build go2rtc_mac_arm64
        env: { GOOS: darwin, GOARCH: arm64 }
        run: go build -ldflags "-s -w" -trimpath
      - name: Upload go2rtc_mac_arm64
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with: { name: go2rtc_mac_arm64, path: go2rtc }

      - name: Build go2rtc_freebsd_amd64
        env: { GOOS: freebsd, GOARCH: amd64 }
        run: go build -ldflags "-s -w" -trimpath
      - name: Upload go2rtc_freebsd_amd64
        uses: actions/upload-artifact@ff15f0306b3f739f7b6fd43fb5d26cd321bd4de5 # v3.2.1
        with: { name: go2rtc_freebsd_amd64, path: go2rtc }

      - name: Build go2rtc_freebsd_arm64
        env: { GOOS: freebsd, GOARCH: arm64 }
        run: go build -ldflags "-s -w" -trimpath
      - name: Upload go2rtc_freebsd_arm64
        uses: actions/upload-artifact@ff15f0306b3f739f7b6fd43fb5d26cd321bd4de5 # v3.2.1
        with: { name: go2rtc_freebsd_arm64, path: go2rtc }

  docker-master:
    name: Build docker master
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}},enable=false
            type=match,pattern=v(.*),group=1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # v5.4.0
        with:
          context: .
          platforms: |
            linux/amd64
            linux/386
            linux/arm/v7
            linux/arm64/v8
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  docker-hardware:
    name: Build docker hardware
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Docker meta
        id: meta-hw
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          flavor: |
            suffix=-hardware,onlatest=true
            latest=auto
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}},enable=false
            type=match,pattern=v(.*),group=1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # v5.4.0
        with:
          context: .
          file: hardware.Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-hw.outputs.tags }}
          labels: ${{ steps.meta-hw.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
